format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other

app:
  envs:
  - BIN_NAME: stepman

step_bundles:
  setup-go:
    steps:
    - script:
        title: Setup pinned Go version
        inputs:
        - content: asdf install

workflows:
  test:
    title: Runs tests
    steps:
    - git::https://github.com/bitrise-steplib/steps-check.git:
        inputs:
        - workflow: lint
        - skip_step_yml_validation: "yes"
        - skip_go_checks: "yes"
    - bundle::setup-go: { }
    - go-list: { }
    - script:
        title: golangci-lint
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            
            INSTALL_DIR=$(go env GOPATH)/bin

            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b "$INSTALL_DIR" v2.1.5
            asdf reshim golang
            "$INSTALL_DIR"/golangci-lint run
    - go-test: { }
    - script:
        title: Run integration tests
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            current_stepman="$(pwd)/_tmp/test_stepman"
            export CGO_ENALBED=0
            go build -o "$current_stepman"

            export PR="" PULL_REQUEST_ID=""
            export INTEGRATION_TEST_BINARY_PATH="$current_stepman"
            go test -v ./_tests/integration/...

  create-release:
    description: Creates Linux and Darwin binaries, then publishes a GitHub release
    envs:
    # Goreleaser expects this env var
    - GITHUB_TOKEN: $GIT_BOT_USER_ACCESS_TOKEN
    steps:
    - bundle::setup-go: { }
    - script@1:
        title: Validate if Stepman version matches the git tag
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            version=$(go run main.go --version)
            if [[ "v$version" != "$BITRISE_GIT_TAG" ]]; then
              echo "Stepman version ($version) does not match the git tag ($BITRISE_GIT_TAG)"
              echo "Please update the Stepman version to match the git tag"
              exit 1
            fi
    - script:
        title: Goreleaser (create binaries + publish to GH)
        deps:
          brew:
          - name: goreleaser
        inputs:
        - content: |
            #!/usr/bin/env bash
            set -ex
            goreleaser release

  test-binary-build:
    description: Tests the release build process by creating a snapshot release (without publishing)
    steps:
    - bundle::setup-go: { }
    - script:
        title: Goreleaser (create snapshot binaries)
        deps:
          brew:
          - name: goreleaser
        inputs:
        - content: |
            #!/usr/bin/env bash
            set -ex
            goreleaser release --snapshot --clean
